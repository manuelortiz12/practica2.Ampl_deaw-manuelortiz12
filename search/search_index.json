{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PR\u00c1CTICA DE AMPLIACI\u00d3N UD2 Configuraci\u00f3n de un Servidor Nginx con Hosts Virtuales y Directorios de Usuario El objetivo de esta pr\u00e1ctica es configurar un servidor Nginx que utilice hosts virtuales para alojar m\u00faltiples sitios web en un solo servidor, cada uno apuntando al directorio public_html de distintos usuarios del sistema operativo Debian. Instalaci\u00f3n de Nginx Instalamos Nginx en el sistema : En mi caso estoy haciendo uso de una m\u00e1quina virtual en la que ya tenia instalado el servidor nginx. Usamos SSH para interactuar con el servidor : sh ssh usuario@servidor_ip Creaci\u00f3n de Usuarios del Sistema Creamos al menos dos usuarios nuevos en el sistema : sh sudo adduser usuario1 sudo adduser usuario2 Asignamos contrase\u00f1as seguras a cada usuario durante el proceso de creaci\u00f3n. Estructura de Carpetas y Archivos Directorios personales : sh sudo -u usuario1 mkdir /home/usuario1/public_html sudo -u usuario2 mkdir /home/usuario2/public_html Permisos : sh sudo chmod 755 /home/usuario1/public_html sudo chmod 755 /home/usuario2/public_html Contenido web : Cada usuario debe crear una p\u00e1gina web sencilla dentro de su carpeta public_html . Ejemplo para usuario1 : html <!DOCTYPE html> <html lang=\"es\"> <head> <meta charset=\"UTF-8\"> <title>Usuario 1</title> </head> <body> <h1>P\u00e1gina de Usuario 1</h1> </body> </html> Creaci\u00f3n de Hosts Virtuales Creamos los archivos de configuraci\u00f3n para cada web . Ejemplo para usuario1 : sh sudo nano /etc/nginx/sites-available/usuario1 Contenido del archivo: 2. Asignamos los dominios ficticios a cada host virtual . 3. Configuramos cada host virtual siguiendo el ejemplo anterior. 4. Habilitamos los enlaces simb\u00f3licos : sh sudo ln -s /etc/nginx/sites-available/usuario1 /etc/nginx/sites-enabled/ sudo ln -s /etc/nginx/sites-available/usuario2 /etc/nginx/sites-enabled/ Configuraci\u00f3n del Archivo Host Configuramos el archivo host en el SO hu\u00e9sped para poder acceder a las distintas webs: sh sudo nano /etc/hosts A\u00f1adimos las siguientes l\u00edneas: Implementar HTTPS Generamos un certificado SSL autofirmado para prop\u00f3sitos de prueba: sh sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx-selfsigned.key -out /etc/nginx/ssl/nginx-selfsigned.crt Configuramos Nginx para usar HTTPS . Ejemplo para usuario1 : 3. Reiniciamos Nginx para aplicar los cambios : sh sudo systemctl restart nginx Abrimos la url en el navegador Para Usuario 1: Para Usuario 2:","title":"PR\u00c1CTICA DE AMPLIACI\u00d3N UD2"},{"location":"#practica-de-ampliacion-ud2","text":"","title":"PR\u00c1CTICA DE AMPLIACI\u00d3N UD2"},{"location":"#configuracion-de-un-servidor-nginx-con-hosts-virtuales-y-directorios-de-usuario","text":"El objetivo de esta pr\u00e1ctica es configurar un servidor Nginx que utilice hosts virtuales para alojar m\u00faltiples sitios web en un solo servidor, cada uno apuntando al directorio public_html de distintos usuarios del sistema operativo Debian.","title":"Configuraci\u00f3n de un Servidor Nginx con Hosts Virtuales y Directorios de Usuario"},{"location":"#instalacion-de-nginx","text":"Instalamos Nginx en el sistema : En mi caso estoy haciendo uso de una m\u00e1quina virtual en la que ya tenia instalado el servidor nginx. Usamos SSH para interactuar con el servidor : sh ssh usuario@servidor_ip","title":"Instalaci\u00f3n de Nginx"},{"location":"#creacion-de-usuarios-del-sistema","text":"Creamos al menos dos usuarios nuevos en el sistema : sh sudo adduser usuario1 sudo adduser usuario2 Asignamos contrase\u00f1as seguras a cada usuario durante el proceso de creaci\u00f3n.","title":"Creaci\u00f3n de Usuarios del Sistema"},{"location":"#estructura-de-carpetas-y-archivos","text":"Directorios personales : sh sudo -u usuario1 mkdir /home/usuario1/public_html sudo -u usuario2 mkdir /home/usuario2/public_html Permisos : sh sudo chmod 755 /home/usuario1/public_html sudo chmod 755 /home/usuario2/public_html Contenido web : Cada usuario debe crear una p\u00e1gina web sencilla dentro de su carpeta public_html . Ejemplo para usuario1 : html <!DOCTYPE html> <html lang=\"es\"> <head> <meta charset=\"UTF-8\"> <title>Usuario 1</title> </head> <body> <h1>P\u00e1gina de Usuario 1</h1> </body> </html>","title":"Estructura de Carpetas y Archivos"},{"location":"#creacion-de-hosts-virtuales","text":"Creamos los archivos de configuraci\u00f3n para cada web . Ejemplo para usuario1 : sh sudo nano /etc/nginx/sites-available/usuario1 Contenido del archivo: 2. Asignamos los dominios ficticios a cada host virtual . 3. Configuramos cada host virtual siguiendo el ejemplo anterior. 4. Habilitamos los enlaces simb\u00f3licos : sh sudo ln -s /etc/nginx/sites-available/usuario1 /etc/nginx/sites-enabled/ sudo ln -s /etc/nginx/sites-available/usuario2 /etc/nginx/sites-enabled/","title":"Creaci\u00f3n de Hosts Virtuales"},{"location":"#configuracion-del-archivo-host","text":"Configuramos el archivo host en el SO hu\u00e9sped para poder acceder a las distintas webs: sh sudo nano /etc/hosts A\u00f1adimos las siguientes l\u00edneas:","title":"Configuraci\u00f3n del Archivo Host"},{"location":"#implementar-https","text":"Generamos un certificado SSL autofirmado para prop\u00f3sitos de prueba: sh sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx-selfsigned.key -out /etc/nginx/ssl/nginx-selfsigned.crt Configuramos Nginx para usar HTTPS . Ejemplo para usuario1 : 3. Reiniciamos Nginx para aplicar los cambios : sh sudo systemctl restart nginx Abrimos la url en el navegador Para Usuario 1: Para Usuario 2:","title":"Implementar HTTPS"}]}